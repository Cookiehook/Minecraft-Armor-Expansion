package com.cookiehook.armourexpansion.item;

import java.util.Map;

import com.cookiehook.armourexpansion.init.ModItems;

import net.minecraft.enchantment.Enchantment;
import net.minecraft.enchantment.EnchantmentHelper;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.item.ItemStack;
import net.minecraft.potion.Potion;
import net.minecraft.potion.PotionEffect;
import net.minecraft.world.World;

public class ItemLapisArmor extends BaseArmor {
	public ItemLapisArmor(ArmorMaterial material, int renderIndex, int armorType, String name) {
		super(material, renderIndex, armorType, name);
	}

	@Override
	public void onArmorTick(World world, EntityPlayer player, ItemStack armor) {
		if (player.getCurrentArmor(3).getItem() instanceof ItemLapisArmor 
				&& player.getCurrentArmor(2).getItem() instanceof ItemLapisArmor
				&& player.getCurrentArmor(1).getItem() instanceof ItemLapisArmor 
				&& player.getCurrentArmor(0).getItem() instanceof ItemLapisArmor) {
			player.addPotionEffect(new PotionEffect(Potion.waterBreathing.id, 20, 0));
			Map ench = EnchantmentHelper.getEnchantments(armor);
			if (!ench.containsKey(6)) {
				armor.addEnchantment(Enchantment.aquaAffinity, 1);
			}
		} else {
			Map ench = EnchantmentHelper.getEnchantments(armor);
			ench.remove(6);
			EnchantmentHelper.setEnchantments(ench, armor);
		}
	}

	@Override
	public String getArmorTexture(ItemStack armor, Entity entity, int slot, String type) {
		if (armor.getItem() == ModItems.lapis_leggings) {
			return "armourexpansion:textures/models/armor/lapis_layer_2.png";
		} else {
			return "armourexpansion:textures/models/armor/lapis_layer_1.png";
		}
	}

	@Override
	public boolean getIsRepairable(ItemStack armor, ItemStack stack) {
		return stack.getItem() == ModItems.lapis_lazuli_ingot;
	}
}
